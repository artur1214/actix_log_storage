//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use serde_with::TimestampMilliSeconds;
use serde_with::formats::Flexible;

#[serde_with::serde_as]
#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Deserialize, Serialize)]
#[sea_orm(table_name = "request")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip)]
    pub id: i32,
    pub user: Option<String>,
    pub data: Option<String>,
    pub document_id: Option<String>,
    pub document_lifecycle: Option<String>,
    pub frame_id: Option<i32>,
    pub frame_type: Option<String>,
    pub from_cache: Option<bool>,
    pub initiator: Option<String>,
    pub ip: Option<String>,
    pub method: Option<String>,
    pub parent_document_id: Option<String>,
    pub parent_frame_id: Option<i32>,
    pub request_id: Option<String>,
    pub response_headers: Option<String>,
    pub status_code: Option<i32>,
    pub status_line: Option<String>,
    pub tab_id: Option<i32>,

    #[serde_as(as = "Option<TimestampMilliSeconds<String, Flexible>>")]
    pub time_stamp: Option<DateTime>,
    pub r#type: Option<String>,
    pub url: Option<String>,
    #[serde(skip)]
    pub server_time_stamp: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
